defaults: &defaults
  environment:
    CC_TEST_REPORTER_ID: 0770301e1db2e5d01e2c0ec59f87f59de0ff3dcf06e5e09656822f0a5d19e99a
    NODE_ENV: test
  docker:
    - image: circleci/python:2-node-browsers
version: 2
jobs:
  upload-codeclimate:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Upload codeclimate results
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter sum-coverage --output - --parts 2 codeclimate/*.json | ./cc-test-reporter upload-coverage --input -
  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git
  test-python:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - pipenv-{{.Branch}}-{{checksum "requirements.txt"}}
            - pipenv-{{.Branch}}-
            - pipenv-
      - run:
          name: Setup Code Climate test reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Install dependencies
          command: |
            pipenv install -r requirements.txt
            pipenv install coverage
      - run:
          name: Run tests
          command: |
            mkdir -p test-results/nose codeclimate/
            ./cc-test-reporter before-build
            pipenv run ./manage.py test --cover-xml
            ./cc-test-reporter format-coverage --output ./codeclimate/python.json
      - persist_to_workspace:
          root: .
          paths:
            - codeclimate
      - store_test_results:
          path: ./test-results/
      - save_cache:
          paths:
            - ./.local
            - ./.cache
          key: pipenv-{{.Branch}}-{{checksum "requirements.txt"}}
  test-node:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-{{.Branch}}-{{checksum "yarn.lock"}}
            - yarn-{{.Branch}}-
            - yarn-
      - run:
          name: Setup Code Climate test reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Install dependencies
          command: |
            yarn install
      - run:
          name: Run tests
          command: |
            mkdir -p test-results/jest codeclimate/
            ./cc-test-reporter before-build
            yarn test --ci --testResultsProcessor=jest-junit
            ./cc-test-reporter format-coverage --output ./codeclimate/node.json
      - persist_to_workspace:
          root: .
          paths:
            - codeclimate
      - store_test_results:
          path: ./test-results/
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-{{.Branch}}-{{checksum "yarn.lock"}}
workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test-node
      - test-python
      - upload-codeclimate:
          requires:
            - test-node
            - test-python
      - deploy:
          requires:
            - test-node
            - test-python
          filters:
            branches:
              only: master
